{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#hello","title":"Hello","text":""},{"location":"Cnote/","title":"C","text":""},{"location":"Cnote/#_1","title":"\u4e00\u3001\u8fd0\u7b97\u7b26","text":"<ul> <li>\u4f18\u5148\u7ea7</li> </ul> <ul> <li> <p>\u9017\u53f7</p> <p>\u7528\u6765\u8fde\u63a5\u4e24\u4e2a\u8868\u8fbe\u5f0f\uff0c\u53f3\u8fb9\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u5b83\u7684\u7ed3\u679c\uff0c\u9017\u53f7\u7684\u7ec4\u5408\u5173\u7cfb\u662f\u4ece\u5de6\u5230\u53f3\uff0c\u6240\u4ee5\u5de6\u8fb9\u8868\u8fbe\u5f0f\u5148\u8ba1\u7b97\uff0c\u53f3\u8fb9\u8868\u8fbe\u5f0f\u7684\u503c\u7559\u4e0b\u6765\u4f5c\u4e3a\u9017\u53f7\u8fd0\u7b97\u7684\u7ed3\u679c</p> </li> <li> <p>&amp;&amp;\u4e0e||</p> <p>\u5bf9\u4e8e&amp;&amp;\uff0c\u5de6\u8fb9\u662ffalse\u65f6\u5c31\u4e0d\u505a\u53f3\u8fb9 \u5bf9\u4e8e||\uff0c\u5de6\u8fb9\u662ftrue\u5c31\u4e0d\u505a\u53f3\u8fb9</p> </li> <li> <p>?:</p> <p>count = (count&gt;20)?count -10 : count+10; true\u5219count -10 false\u5219count+10</p> </li> <li> <p>switch</p> <ul> <li>\u5982\u679c\u6267\u884c\u5b8c\u5206\u652f\u4e2d\u6700\u540e\u4e00\u6761\u8bed\u53e5\u540e\uff0c\u82e5\u540e\u8fb9\u65e0break\uff0c\u5c31\u662f\u6309\u987a\u5e8f\u6267\u884c\u5230\u4e0b\u9762\u7684case\uff0c\u76f4\u5230\u9047\u5230\u4e00\u4e2abreak\uff0c\u6216\u8005switch\u7ed3\u675f\u4e3a\u6b62<pre><code>```c\nswitch(type)\n{\n    case 1:\n    case 2:\n        printf(\"\");\n        break;\n    case 3:\n        printf(\"\");\n    case 4:\n        printf(\"\");\n        break;\n    default:\n        printf(\"\");\n        break;\n}\n\n```\n</code></pre> </li> </ul> </li> <li> <p>sizheof</p> <ul> <li> <p>\u8bed\u6cd5</p> <p></p> </li> <li> <p>sizeof\u662f\u9759\u6001\u8fd0\u7b97\u7b26(\u4e0d\u662f\u51fd\u6570!)sizeof(a++)\u4e2d++\u65e0\u4efb\u4f55\u4f5c\u7528</p> </li> </ul> </li> </ul>"},{"location":"Cnote/#_2","title":"\u4e8c\u3001\u968f\u673a\u6570","text":"<pre><code>```c\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;time.h&gt;\n\nint main()\n{\n    srand(time(0));\n    int a = rand();\n\n    //a\u4e3a\u968f\u673a\u6570\n}\n</code></pre>"},{"location":"Cnote/#_3","title":"\u4e09\u3001\u6570\u7ec4\u4e0e\u6307\u9488","text":"<pre><code>- \u4e8c\u7ef4\u6570\u7ec4\u7684\u521d\u59cb\u5316\n\n    ```c\n    int a[][5] = { {0,1,2,3,4},{1,2,3,4,5},}\n    ```\n\n    - \u5217\u6570\u5fc5\u987b\u7ed9\u51fa\uff0c\u884c\u6570\u53ef\u4ee5\u7531\u7f16\u8bd1\u5668\u6765\u6570\n    - \u6700\u540e\u7684\u9017\u53f7\u53ef\u4ee5\u5b58\u5728\n    - \u5982\u679c\u7701\u7565\uff0c\u8868\u793a\u8865\u96f6\n- \u4ece\u7279\u5b9a\u90e8\u4f4d\u5f00\u59cb\u521d\u59cb\n\n    ```c\n    int a[10] = {[0] = 2,[2] = 3,6};\n    ```\n\n    \u6ca1\u6709\u5b9a\u4f4d\u7684\u6570\u636e\u63a5\u5728\u524d\u9762\u7684\u4f4d\u7f6e\u540e\u9762\uff0c\u5176\u4ed6\u4f4d\u7f6e\u7684\u503c\u8865\u96f6\n\n- \u6570\u7ec4\u53d8\u91cf\u662f\u7279\u6b8a\u7684\u6307\u9488\n    - \u6570\u7ec4\u53d8\u91cf\u672c\u8eab\u8868\u8fbe\u5730\u5740\u6240\u4ee5\n        - `int a[10];int* p =a`//\u65e0\u9700\u7528&amp;\u53d6\u5730\u5740\n        - `a == &amp;a[0]`  //\u6bcf\u4e2a\u6570\u7ec4\u5355\u5143\u9700\u8981\u53d6&amp;\n        - `p[0] == a[0]`\n        - `*a = 25`\n        - `int a[] == int* const a` \u6570\u7ec4\u662fconst\u7684\u6307\u9488\uff0c\u6240\u4ee5\u4e0d\u80fd\u88ab\u8d4b\u503c\n- \u6570\u7ec4\u53c2\u6570\n\n    \u4ee5\u4e0b\u56db\u79cd\u51fd\u6570\u539f\u578b\u662f\u7b49\u4ef7\u7684\n\n    - int sum(int *ar,int n);\n    - int sum(int *,int);\n    - int sum(int ar[],int n);\n    - int sum(int [],int);\n    - int fun(int a[5]) \u9171\u7d2b\u4e5f\u53ef\u4ee5\u8fd0\u884c\n- conts who\u53ca\u5e94\u7528\n    - int* const q = &amp;i; // q is const\n    *q = 26; \n    q++; //ERROR\n    - const in *p = &amp;i; \u8868\u793a\u4e0d\u80fd\u901a\u8fc7\u8fd9\u4e2a\u6307\u9488\u53bb\u4fee\u6539\u90a3\u4e2a\u53d8\u91cf\n    *p = 26//ERROR\n    i = 26;\n    p = &amp;j;\n    - \u7efc\u4e0a\uff0c\u5224\u65ad\u54ea\u4e2a\u88abconst\u4e86\u7684\u6807\u5fd7\u662fconst\u5728*\u7684\u524d\u8fb9\u8fd8\u662f\u540e\u8fb9\n    - **\u5e94\u7528**:\u4fdd\u62a4\u6570\u7ec4\u503c\n    \u56e0\u4e3a\u628a\u6570\u7ec4\u4f20\u5165\u51fd\u6570\u65f6\u4f20\u9012\u7684\u662f\u5730\u5740\uff0c\u6240\u4ee5\u90a3\u4e2a\u51fd\u6570\u5185\u90e8\u53ef\u4ee5\u4fee\u6539\u6570\u7ec4\u7684\u503c\u3002\n    \u4e3a\u4e86\u4fdd\u62a4\u6570\u7ec4\u4e0d\u88ab\u51fd\u6570\u7834\u574f\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u53c2\u6570\u4e3aconst\n    int sum(const int a[],int length)\n- \u6307\u9488\u7c7b\u578b\u7684\u8f6c\u6362\n    - void* \u8868\u793a\u4e0d\u77e5\u9053\u6307\u5411\u4ec0\u4e48\u4e1c\u897f\u7684\u6307\u9488\n    - \u6307\u9488\u4e5f\u53ef\u4ee5\u8f6c\u6362\u7c7b\u578b\n    - `int* *p = &amp;i;void ** q = (void**)p`*  \u6b64\u65f6\u6ca1\u6709\u6539\u53d8p\u6240\u6307\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u800c\u662f\u8ba9\u540e\u4eba\u7528\u4e0d\u540c\u773c\u5149\u901a\u8fc7p\u770b\u5b83\u6240\u6307\u7684\u53d8\u91cf\n        - \u6211\u4e0d\u518d\u5f53\u4f60\u662fint\u5566\uff0c\u6211\u8ba4\u4e3a\u4f60\u5c31\u662f\u4e2avoid\n- \u4e8c\u7ea7\u6307\u9488\n    - char **a   a\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u53e6\u4e00\u4e2a\u6307\u9488\n    - char a[][] \u2260 char *a[]\n\n        ```c\n        char a[][]10 = {\"Hello\",\"World\"};\n        a[0] --&gt; char [10]\n        a[0]    [Hello\\0]\n        a[1]    [World\\0]\n\n        char *a[]\n        a[] --&gt; [] []\u5185\u7684\u4e1c\u897f\u6307\u5411\u5916\u9762\u67d0\u5904[Hello\\0]\u7b49\n        ```\n</code></pre>"},{"location":"Cnote/#_4","title":"\u56db\u3001\u6570\u636e\u7c7b\u578b\u53ca\u81ea\u53d8\u91cf","text":"<pre><code>- *\u5b57\u8282\u5927\u5c0f*\n    - int \uff1a4\u4e2a\u5b57\u8282\n    - char\uff1a1\u4e2a\u5b57\u8282\n    - double 8\u4e2a\u5b57\u8282\n    - short 2\u4e2a\u5b57\u8282\n    - \u4e00\u4e2a\u5b57\u8282\u7684\u6570\u636e\u5927\u5c0f\u8303\u56f4\u4e3a\u4ec0\u4e48\u662f-128~127\n        - \u4e00\u4e2a\u5b57\u8282\u662f8\u4f4d\uff0c\u6700\u9ad8\u4f4d\u662f\u7b26\u53f7\u4f4d\uff0c\u6700\u9ad8\u4f4d\u4e3a0\u5219\u662f\u6b63\u6570\u3002\u6700\u9ad8\u4f4d\u4e3a1\u5219\u662f\u8d1f\u6570\n        - \u5982\u679c\u4e00\u4e2a\u6570\u662f\u6b63\u6570\uff0c\u6700\u5927\u6570\u5219\u4e3a\uff1a01111111\uff0c\u8f6c\u4e3a\u5341[\u8fdb\u5236](https://so.csdn.net/so/search?q=%E8%BF%9B%E5%88%B6&amp;spm=1001.2101.3001.7020)\u4e3a127\uff0c\n        - **\u4f46\u662f**\uff1a\u4e00\u4e2a+0\u8868\u793a\u4e3a\uff1a00000000\uff0c\u4e00\u4e2a-0\u8868\u793a\u4e3a\uff1a1000000\uff0c\u56e0\u4e3a\u7b26\u53f7\u4f4d\u4e0d\u7b97\u5728\u91cc\u9762\uff0c\u6240\u4ee5\u5c31\u4f1a\u6709\u4e24\u4e2a0\uff0c\u6240\u4ee5\u4ece\u4e00\u5f00\u59cb\u53d1\u660e[\u4e8c\u8fdb\u5236](https://so.csdn.net/so/search?q=%E4%BA%8C%E8%BF%9B%E5%88%B6&amp;spm=1001.2101.3001.7020)\u7684\u65f6\u5019\uff0c\u5c31\u628a-0\u89c4\u5b9a\u4e3a-128\uff0c\u5982\u6b64\u4e8c\u8fdb\u5236\u7684\u8865\u7801\u5c31\u521a\u597d\u5728\u8ba1\u7b97\u673a\u4e2d\u8fd0\u4f5c\u4e2d\u543b\u5408\u3002\uff08\u8fd9\u662f\u56fd\u5185\u6559\u6750\u4e2d\u7684\u89e3\u91ca\uff09\n- *\u6574\u5f62*\n    - 123\u8868\u793a\u5341\u8fdb\u5236123\n    - 0123\u662f\u516b\u8fdb\u5236\u8868\u793a\u65b9\u6cd5 \u4e3a83\n    - 0x123\u662f\u5341\u516d\u8fdb\u5236\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u4e3a291\n- *\u5b57\u7b26\u578b*\n    - \u540c\u65f6 \u5728\u5f15\u53f7\u91cc\u6709\u8f6c\u4e49\u7684\u6548\u679c\uff0c\u6bd4\u5982\u00a0'\\n' '\\t'\u00a0\u90fd\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff0c\u800c\u00a0'\\\\'\u00a0\u624d\u4f1a\u8868\u793a\u4e00\u4e2a \u5b57\u7b26\uff1b\n    - \u518d\u8fdb\u4e00\u6b65\uff0c \u540e\u9762\u53ef\u4ee5\u63a5\u6700\u591a\u4e09\u4e2a\u6570\u5b57\u6765\u4f7f\u7528\u516b\u8fdb\u5236\u8868\u793a\u4e00\u4e2a\u5b57\u8282\uff0c\u4e14\u9047\u5230\u00a00-7\u00a0\u8303\u56f4\u4e4b\u5916\u7684\u6570\u5b57\u4f1a\u7ed3\u675f\u5f53\u524d\u5b57\u8282\uff0c\u6bd4\u5982\u00a0'\\101'\u00a0\u4e5f\u8868\u793a\u00a0'A'\uff0c\u800c\u00a0'\\08'\u00a0\u56e0\u4e3a\u00a08\u00a0\u8d85\u8fc7\u4e86\u516b\u8fdb\u5236\u8303\u56f4\uff0c\u6240\u4ee5\u8fd9\u662f\u4e24\u4e2a\u5b57\u7b26\u653e\u5230\u4e86\u4e00\u4e2a\u5355\u5f15\u53f7\u91cc\uff0c\u4e0d\u662f\u6b63\u786e\u7684\u7528\u6cd5\uff0c\u5982\u679c\u5199\u6210\u5b57\u7b26\u4e32\uff0c\u5219\u00a0\"\\08\"\u00a0\u8868\u793a\u4e24\u4e2a\u5b57\u7b26\uff1b\n</code></pre>"},{"location":"Cnote/#_5","title":"\u4e94\u3001\u7ed3\u6784\u7c7b\u578b","text":"<ul> <li>\u679a\u4e3e(\u4e0d\u5e38\u7528)<ul> <li>\u683c\u5f0f: enum \u679a\u4e3e\u7c7b\u578b\u540d\u5b57{\u540d\u5b570,\u2026.\u540d\u5b57n};</li> <li>\u5927\u62ec\u53f7\u5185\u662f\u5e38\u91cf\u7b26\u53f7\uff0c\u7c7b\u578b\u4e3aint,\u503c\u4f9d\u6b21\u4ece0\u5230n</li> </ul> </li> </ul> <pre><code>enum colors {red,yellow,green};\nenum colors(red=1,yellow,green=5);\n</code></pre> <ul> <li>\u7ed3\u6784</li> </ul> <pre><code>    struct\n    {\n\n    }\n</code></pre>"},{"location":"Cnote/#_6","title":"\u516d\u3001\u6807\u8bc6\u7b26\u4e0e\u5173\u952e\u5b57","text":"<pre><code>- C\u8bed\u8a00\u7684\u6807\u8bc6\u7b26\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u7ec4\u6210\uff0c\u5e76\u4e14\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\uff0c\u4e0d\u80fd\u662f\u6570\u5b57\u3002\u5728\u6807\u8bc6\u7b26\u4e2d\uff0c\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u662f\u6709\u533a\u522b\u7684\uff0c\u4f8b\u5982BOOK\u4e0ebook\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u6807\u8bc6\u7b26\u3002C\u8bed\u8a00\u5173\u952e\u5b57\u4e0d\u53ef\u4ee5\u7528\u505a\u6807\u8bc6\u7b26\n\n- **\u5173\u952e\u5b57**\n</code></pre>"},{"location":"Cnote/#_7","title":"\u4e03\u3001\u6570\u636e\u7c7b\u578b\u5173\u952e\u5b57","text":"<p>A\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff085\u4e2a\uff09</p> <pre><code>- void\uff1a\u58f0\u660e\u51fd\u6570\u65e0\u8fd4\u56de\u503c\u6216\u65e0\u53c2\u6570\uff0c\u58f0\u660e\u65e0\u7c7b\u578b\u6307\u9488\uff0c\u663e\u5f0f\u4e22\u5f03\u8fd0\u7b97\u7ed3\u679c\n- char\uff1a\u5b57\u7b26\u578b\u7c7b\u578b\u6570\u636e\uff0c\u5c5e\u4e8e\u6574\u578b\u6570\u636e\u7684\u4e00\u79cd\n- int\uff1a\u6574\u578b\u6570\u636e\uff0c\u901a\u5e38\u4e3a\u7f16\u8bd1\u5668\u6307\u5b9a\u7684\u673a\u5668\u5b57\u957f\n- float\uff1a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b\u6570\u636e\uff0c\u5c5e\u4e8e\u6d6e\u70b9\u6570\u636e\u7684\u4e00\u79cd\n- double\uff1a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u6570\u636e\uff0c\u5c5e\u4e8e\u6d6e\u70b9\u6570\u636e\u7684\u4e00\u79cd\n</code></pre> <p>B\u7c7b\u578b\u4fee\u9970\u5173\u952e\u5b57\uff084\u4e2a\uff09</p> <pre><code>- short\uff1a\u4fee\u9970int\uff0c\u77ed\u6574\u578b\u6570\u636e\uff0c\u53ef\u7701\u7565\u88ab\u4fee\u9970\u7684int\u3002\n- long\uff1a\u4fee\u9970int\uff0c\u957f\u6574\u5f62\u6570\u636e\uff0c\u53ef\u7701\u7565\u88ab\u4fee\u9970\u7684int\u3002\n- signed\uff1a\u4fee\u9970\u6574\u578b\u6570\u636e\uff0c\u6709\u7b26\u53f7\u6570\u636e\u7c7b\u578b\n- unsigned\uff1a\u4fee\u9970\u6574\u578b\u6570\u636e\uff0c\u65e0\u7b26\u53f7\u6570\u636e\u7c7b\u578b\n</code></pre> <p>C\u590d\u6742\u7c7b\u578b\u5173\u952e\u5b57\uff085\u4e2a\uff09</p> <pre><code>- struct\uff1a\u7ed3\u6784\u4f53\u58f0\u660e\n- union\uff1a\u5171\u7528\u4f53\u58f0\u660e\n- enum\uff1a\u679a\u4e3e\u58f0\u660e\n- typedef\uff1a\u58f0\u660e\u7c7b\u578b\u522b\u540d\n- sizeof\uff1a\u5f97\u5230\u7279\u5b9a\u7c7b\u578b\u6216\u7279\u5b9a\u7c7b\u578b\u53d8\u91cf\u7684\u5927\u5c0f\n</code></pre> <p>D\u5b58\u50a8\u7ea7\u522b\u5173\u952e\u5b57\uff086\u4e2a\uff09</p> <pre><code>- auto\uff1a\u6307\u5b9a\u4e3a\u81ea\u52a8\u53d8\u91cf\uff0c\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u53ca\u91ca\u653e\u3002\u901a\u5e38\u5728\u6808\u4e0a\u5206\u914d\n- static\uff1a\u6307\u5b9a\u4e3a\u9759\u6001\u53d8\u91cf\uff0c\u5206\u914d\u5728\u9759\u6001\u53d8\u91cf\u533a\uff0c\u4fee\u9970\u51fd\u6570\u65f6\uff0c\u6307\u5b9a\u51fd\u6570\u4f5c\u7528\u57df\u4e3a\u6587\u4ef6\u5185\u90e8\n- register\uff1a\u6307\u5b9a\u4e3a\u5bc4\u5b58\u5668\u53d8\u91cf\uff0c\u5efa\u8bae\u7f16\u8bd1\u5668\u5c06\u53d8\u91cf\u5b58\u50a8\u5230\u5bc4\u5b58\u5668\u4e2d\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u4fee\u9970\u51fd\u6570\u5f62\u53c2\uff0c\u5efa\u8bae\u7f16\u8bd1\u5668\u901a\u8fc7\u5bc4\u5b58\u5668\u800c\u4e0d\u662f\u5806\u6808\u4f20\u9012\u53c2\u6570\n- extern\uff1a\u6307\u5b9a\u5bf9\u5e94\u53d8\u91cf\u4e3a\u5916\u90e8\u53d8\u91cf\uff0c\u5373\u5728\u53e6\u5916\u7684\u76ee\u6807\u6587\u4ef6\u4e2d\u5b9a\u4e49\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u7ea6\u5b9a\u7531\u53e6\u5916\u6587\u4ef6\u58f0\u660e\u7684\u5bf9\u8c61\u7684\u4e00\u4e2a\u201c\u5f15\u7528\u201c\n- const\uff1a\u4e0evolatile\u5408\u79f0\u201ccv\u7279\u6027\u201d\uff0c\u6307\u5b9a\u53d8\u91cf\u4e0d\u53ef\u88ab\u5f53\u524d\u7ebf\u7a0b/\u8fdb\u7a0b\u6539\u53d8\uff08\u4f46\u6709\u53ef\u80fd\u88ab\u7cfb\u7edf\u6216\u5176\u4ed6\u7ebf\u7a0b/\u8fdb\u7a0b\u6539\u53d8\uff09\n- volatile\uff1a\u4e0econst\u5408\u79f0\u201ccv\u7279\u6027\u201d\uff0c\u6307\u5b9a\u53d8\u91cf\u7684\u503c\u6709\u53ef\u80fd\u4f1a\u88ab\u7cfb\u7edf\u6216\u5176\u4ed6\u8fdb\u7a0b/\u7ebf\u7a0b\u6539\u53d8\uff0c\u5f3a\u5236\u7f16\u8bd1\u5668\u6bcf\u6b21\u4ece\u5185\u5b58\u4e2d\u53d6\u5f97\u8be5\u53d8\u91cf\u7684\u503c\n</code></pre>"},{"location":"Cnote/#_8","title":"\u516b\u3001\u6d41\u7a0b\u63a7\u5236\u5173\u952e\u5b57","text":"<pre><code>    **A\u8df3\u8f6c\u7ed3\u6784\uff084\u4e2a\uff09**\n\n    - return\uff1a\u7528\u5728\u51fd\u6570\u4f53\u4e2d\uff0c\u8fd4\u56de\u7279\u5b9a\u503c\uff08\u6216\u8005\u662fvoid\u503c\uff0c\u5373\u4e0d\u8fd4\u56de\u503c\uff09\n    - continue\uff1a\u7ed3\u675f\u5f53\u524d\u5faa\u73af\uff0c\u5f00\u59cb\u4e0b\u4e00\u8f6e\u5faa\u73af\n    - break\uff1a\u8df3\u51fa\u5f53\u524d\u5faa\u73af\u6216switch\u7ed3\u6784\n    - goto\uff1a\u65e0\u6761\u4ef6\u8df3\u8f6c\u8bed\u53e5\n\n    **B\u5206\u652f\u7ed3\u6784\uff085\u4e2a\uff09**\n\n    - if\uff1a\u6761\u4ef6\u8bed\u53e5\n    - else\uff1a\u6761\u4ef6\u8bed\u53e5\u5426\u5b9a\u5206\u652f\uff08\u4e0eif\u8fde\u7528\uff09\n    - switch\uff1a\u5f00\u5173\u8bed\u53e5\uff08\u591a\u91cd\u5206\u652f\u8bed\u53e5\uff09\n    - case\uff1a\u5f00\u5173\u8bed\u53e5\u4e2d\u7684\u5206\u652f\u6807\u8bb0\n    - default\uff1a\u5f00\u5173\u8bed\u53e5\u4e2d\u7684\u201c\u5176\u4ed6\u201d\u5206\u6cbb\uff0c\u53ef\u9009\u3002\n\n    **C\u5faa\u73af\u7ed3\u6784\uff083\u4e2a\uff09**\n\n    - for\uff1afor\u5faa\u73af\u7ed3\u6784\uff0cfor(1;2;3)4;\u7684\u6267\u884c\u987a\u5e8f\u4e3a1-&gt;2-&gt;4-&gt;3-&gt;2...\u5faa\u73af\uff0c\u5176\u4e2d2\u4e3a\u5faa\u73af\u6761\u4ef6\n    - do\uff1ado\u5faa\u73af\u7ed3\u6784\uff0cdo 1 while(2);\u7684\u6267\u884c\u987a\u5e8f\u662f1-&gt;2-&gt;1...\u5faa\u73af\uff0c2\u4e3a\u5faa\u73af\u6761\u4ef6\n    - while\uff1awhile\u5faa\u73af\u7ed3\u6784\uff0cwhile(1) 2;\u7684\u6267\u884c\u987a\u5e8f\u662f1-&gt;2-&gt;1...\u5faa\u73af\uff0c1\u4e3a\u5faa\u73af\u6761\u4ef6\n\n    \u4ee5\u4e0a\u5faa\u73af\u8bed\u53e5\uff0c\u5f53\u5faa\u73af\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e3a\u771f\u5219\u7ee7\u7eed\u5faa\u73af\uff0c\u4e3a\u5047\u5219\u8df3\u51fa\u5faa\u73af\u3002\n</code></pre> <ul> <li>\u5b57\u7b26\u4e32<ul> <li>\u8f93\u5165\u548c\u8f93\u51fa<ul> <li>putchar</li> <li>getchar  \u8fd4\u56de\u7c7b\u578b\u4e3a int</li> </ul> </li> </ul> </li> </ul>"},{"location":"Csave/","title":"code save","text":""},{"location":"Csave/#rethink","title":"rethink","text":"<ol> <li>\u5148\u6574\u7406\u6e05\u601d\u8def\uff0c\u5206\u6a21\u5757\u6b65\u6b65\u5b8c\u6210\u3002</li> <li>\u5faa\u73af\u5185\u91cd\u590d\u4f7f\u7528\u7684\u6570\u636e\u8981\u5728\u4e0b\u4e00\u6b21\u5faa\u73af\u524d\u683c\u5f0f\u5316</li> <li>if( == ) not if( = ) ,scanf(\u201d%lf\u201d,&amp;(double)x),\u4e0d\u8981\u5fd8\u4e86 &amp;\u548clf!!!</li> <li> <p>1.\u51fa\u6808\u5e8f\u5217\u7684\u5408\u6cd5\u6027</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u6700\u5927\u5bb9\u91cf\u4e3a\u00a0M\u00a0\u7684\u5806\u6808\uff0c\u5c06\u00a0N\u00a0\u4e2a\u6570\u5b57\u6309 1, 2, 3, ...,\u00a0N\u00a0\u7684\u987a\u5e8f\u5165\u6808\uff0c\u5141\u8bb8\u6309\u4efb\u4f55\u987a\u5e8f\u51fa\u6808\uff0c\u5219\u54ea\u4e9b\u6570\u5b57\u5e8f\u5217\u662f\u4e0d\u53ef\u80fd\u5f97\u5230\u7684\uff1f\u4f8b\u5982\u7ed9\u5b9a\u00a0M=5\u3001N=7\uff0c\u5219\u6211\u4eec\u6709\u53ef\u80fd\u5f97\u5230{ 1, 2, 3, 4, 5, 6, 7 }\uff0c\u4f46\u4e0d\u53ef\u80fd\u5f97\u5230{ 3, 2, 1, 7, 5, 6, 4 }\u3002</p> </li> </ol> <pre><code>#include&lt;stdio.h&gt;\nint push(int a[],int top,int x)\n{\n    a[top] = x;\n    top++;\n    return top;\n}\nint main()\n{\n    int m,n,k;\n    scanf(\"%d %d %d\",&amp;m,&amp;n,&amp;k);\n    int a[m];\n    int b[n]; //save scanf\n    for(int i = 0;i &lt; k;i++)\n    {\n        int x = 1;\n        int top = 0;\n        int cnt = 0;\n        int end = 1; //if 1,printf No\n        for(int j = 0;j&lt;m;j++)\n        {\n            a[j] = 0;\n        }\n        for(int j = 0;j&lt;n;j++)\n        {\n            scanf(\"%d\",&amp;b[j]);\n        }\n        while(top &lt; 5) //empty max = 5\n        {\n            top = push(a,top,x);\n            x++;\n            while(a[top-1] == b[cnt] &amp;&amp; top&gt;0 )\n            {\n                cnt++;\n                top--;\n            }\n            if(cnt == 7)\n            {\n                printf(\"Yes\\n\");\n                end = 0;\n                break;\n            }\n        }\n        if(end)\n        {\n            printf(\"No\\n\");\n        }\n    }\n}\n</code></pre> <ul> <li> <p>2.Gram-Schmidt\u7b97\u6cd5</p> <p>Gram-Schmidt\u7b97\u6cd5\u7528\u6765\u786e\u5b9a\u4e00\u7ec4\u00a0n\u00a0\u5411\u91cf\u00a0a1,\u22ef,ak\u00a0\u662f\u5426\u4e3a\u7ebf\u6027\u65e0\u5173\u7684\u3002</p> <p>\u7ed9\u5b9a\u00a0n\u00a0\u5411\u91cf\u00a0a1,\u22ef,ak\uff0c\u4ee4\u00a0q0\u00a0\u4e3a\u00a0n\u00a0\u7ef4\u96f6\u5411\u91cf\uff0c\u5bf9\u4e8e\u00a0i=1,\u22ef,k\uff0c</p> <ol> <li>\u6b63\u4ea4\u5316\uff1aq~i=ai\u2212(q1Tai)q1\u2212\u22ef\u2212(qi\u22121Tai)qi\u22121</li> <li>\u68c0\u9a8c\u7ebf\u6027\u76f8\u5173\u6027\uff1a\u82e5\u00a0q~i=0\uff0c\u5219\u7b97\u6cd5\u7ed3\u675f\uff0c\u5f53\u524d\u5411\u91cf\u548c\u4e4b\u524d\u7684\u5411\u91cf\u7ebf\u6027\u76f8\u5173</li> <li>\u89c4\u8303\u5316\uff1aqi=\u2223\u2223q~i\u2223\u2223q~i</li> </ol> <p>\u5bf9\u4e8e\u00a0i=1\uff0c\u7531\u4e8e\u00a0q0\u4e3a\u96f6\uff0c\u6b65\u9aa41\u7b80\u5316\u4e3a\u00a0q~1=a1\u3002\u5982\u679c\u7b97\u6cd5\u6ca1\u6709\u63d0\u524d\u9000\u51fa\uff0c\u5219\u5411\u91cf\u7ec4\u00a0a1,\u22ef,ak\u00a0\u662f\u7ebf\u6027\u65e0\u5173\u7684\uff1b\u5426\u5219\uff0c\u82e5\u7b97\u6cd5\u5728\u00a0i=j\u00a0\u65f6\u9000\u51fa\uff0c\u5373\u00a0q~j=0\uff0c\u5373\u610f\u5473\u7740\u00a0aj\u00a0\u662f\u00a0a1,\u22ef,aj\u22121\u00a0\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u5411\u91cf\u7ec4\u662f\u7ebf\u6027\u76f8\u5173\u7684\u3002</p> <p>\u6ce8\u610f\uff0c\u8003\u8651\u5230\u6d6e\u70b9\u8ba1\u7b97\u8bef\u5dee\uff0c\u53d6\u03f5=10\u22126\uff0c\u5373\u5f53\u4e24\u6570\u8ddd\u79bb\u5c0f\u4e8e<code>1e-6</code>\u65f6\u89c6\u4f5c\u76f8\u7b49\u3002</p> <p>\u53c8\uff1a</p>"},{"location":"Csave/#_1","title":"\u8f93\u5165\u683c\u5f0f\uff1a","text":"<p>\u8f93\u5165\u7b2c\u4e00\u884c\u7ed9\u51fa 3 \u4e2a\u4e0d\u8d85\u8fc7 1000 \u7684\u6b63\u6574\u6570\uff1aM\uff08\u5806\u6808\u6700\u5927\u5bb9\u91cf\uff09\u3001N\uff08\u5165\u6808\u5143\u7d20\u4e2a\u6570\uff09\u3001K\uff08\u5f85\u68c0\u67e5\u7684\u51fa\u6808\u5e8f\u5217\u4e2a\u6570\uff09\u3002\u6700\u540e\u00a0K\u00a0\u884c\uff0c\u6bcf\u884c\u7ed9\u51fa\u00a0N\u00a0\u4e2a\u6570\u5b57\u7684\u51fa\u6808\u5e8f\u5217\u3002\u6240\u6709\u540c\u884c\u6570\u5b57\u4ee5\u7a7a\u683c\u95f4\u9694\u3002</p>"},{"location":"Csave/#_2","title":"\u8f93\u51fa\u683c\u5f0f\uff1a","text":"<p>\u5bf9\u6bcf\u4e00\u884c\u51fa\u6808\u5e8f\u5217\uff0c\u5982\u679c\u5176\u7684\u786e\u662f\u6709\u53ef\u80fd\u5f97\u5230\u7684\u5408\u6cd5\u5e8f\u5217\uff0c\u5c31\u5728\u4e00\u884c\u4e2d\u8f93\u51fa<code>YES</code>\uff0c\u5426\u5219\u8f93\u51fa<code>NO</code>\u3002</p>"},{"location":"Csave/#_3","title":"\u8f93\u5165\u6837\u4f8b\uff1a","text":"<p>``` 5 7 5 1 2 3 4 5 6 7 3 2 1 7 5 6 4 7 6 5 4 3 2 1 5 6 4 3 7 2 1 1 7 6 5 4 3 2</p> <p>```</p>"},{"location":"Csave/#_4","title":"\u8f93\u51fa\u6837\u4f8b\uff1a","text":"<p><code>YES NO NO YES NO</code></p>"},{"location":"Csave/#euclid","title":"Euclid\u8303\u6570","text":"<p>\u4e00\u4e2a\u00a0n\u00a0\u5411\u91cf\u00a0x\u00a0\u7684Euclid\u8303\u6570\u8bb0\u4e3a\u00a0\u2223\u2223x\u2223\u2223\u00a0\uff1a</p> <p>\u2223\u2223x\u2223\u2223=x12+x22+\u22ef+xn2</p> <p>\u4e5f\u53ef\u4ee5\u8868\u793a\u4e3a\u5411\u91cf\u4e0e\u5176\u81ea\u8eab\u505a\u5185\u79ef\u7684\u5e73\u65b9\u6839\u00a0\u2223\u2223x\u2223\u2223=xTx\u3002</p>"},{"location":"Csave/#_5","title":"\u5411\u91cf\u7684\u5185\u79ef\uff08\u70b9\u79ef\uff09","text":"<p>\u4e24\u4e2a\u00a0n\u00a0\u5411\u91cf\u7684\u5185\u79ef\uff08\u4e5f\u79f0\u4f5c\u70b9\u79ef\uff09\u5b9a\u4e49\u4e3a\u5982\u4e0b\u7684\u6807\u91cf\uff1a</p> <p>aTb=a1b1+a2b2+\u22ef+anbn</p> <p>\u5373\u5bf9\u5e94\u5143\u7d20\u4e58\u79ef\u7684\u548c\u3002\u6709\u7684\u4e66\u4e0a\u8bb0\u505a\u00a0a\u22c5b\u00a0\u3002</p> <p>\u672c\u9898\u7531\u5f20\u5e86\u6625\u5236\u4f5c\u6570\u636e\u5e76\u63d0\u4f9b\u6807\u7a0b\u3002</p>"},{"location":"Csave/#_6","title":"\u8f93\u5165\u683c\u5f0f:","text":"<p>\u5728\u7b2c\u4e00\u884c\u5206\u522b\u7ed9\u51fa\u4e24\u4e2a\u6574\u6570N\uff0cM\u3002N\u8868\u793a\u5411\u91cf\u7684\u7ef4\u5ea6\uff0cM\u8868\u793a\u5411\u91cf\u7684\u4e2a\u6570\u3002</p> <p>\u63a5\u4e0b\u6765M\u884c\u7ed9\u51faM\u4e2a\u5411\u91cf\uff0c\u7528\u6d6e\u70b9\u6570\u8868\u793a\uff0c\u6bcf\u4e2a\u6570\u5b57\u4e4b\u95f4\u7528\u7a7a\u683c\u5206\u9694\u3002</p> <p>\uff08\u5bf9\u4e8e\u533a\u5206<code>float</code>\u548c<code>double</code>\u7684\u8bed\u8a00\uff0c\u5efa\u8bae\u4f7f\u7528<code>double</code>\u7c7b\u578b\uff09</p>"},{"location":"Csave/#_7","title":"\u8f93\u51fa\u683c\u5f0f:","text":"<p>\u5982\u679c\u53d1\u73b0\u8f93\u5165\u5411\u91cf\u7ec4\u662f\u5411\u91cf\u7ebf\u6027\u65e0\u5173\u7684\uff0c\u5219\u8f93\u51fa\u00a0<code>NO</code>\uff0c\u5e76\u5728\u7b2c\u4e8c\u884c\u8f93\u51fa\u6700\u7ec8\u7684\u00a0q\uff0c\u8f93\u51fa\u4f7f\u7528\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\uff0c\u6bcf\u4e2a\u6570\u5b57\u4e4b\u95f4\u4e00\u4e2a\u7a7a\u683c\u3002</p> <p>\u5982\u679c\u53d1\u73b0\u8f93\u5165\u5411\u91cf\u7ec4\u662f\u5411\u91cf\u7ebf\u6027\u76f8\u5173\u7684\uff0c\u5219\u8f93\u51fa<code>YES</code>\uff0c\u5e76\u63a5\u7740\u8f93\u51fa\u7b97\u6cd5\u8fd0\u884c\u5230\u7b2c\u51e0\u4e2a\u5411\u91cf\uff08\u4ece1\u5f00\u59cb\u8ba1\u6570\uff09\u65f6\u505c\u6b62\u7684\u3002</p>"},{"location":"Csave/#1","title":"\u8f93\u5165\u6837\u4f8b1:","text":"<p>``` 5 4 1 2 -1 -2 -3 2 -1 3 -2 7 -1 3 2 4 28 3 10 -2 1 1</p> <p>```</p>"},{"location":"Csave/#1_1","title":"\u8f93\u51fa\u6837\u4f8b1:","text":"<p>``` NO 0.52 0.36 0.49 0.59 -0.14</p> <p>```</p>"},{"location":"Csave/#2","title":"\u8f93\u5165\u6837\u4f8b2:","text":"<p>``` 3 4 0.1 1 2 -0.3 0 -5 3 0 -0.3 0.2 -1 3</p> <p>```</p>"},{"location":"Csave/#2_1","title":"\u8f93\u51fa\u6837\u4f8b2:","text":"<p>\u5728\u8fd9\u91cc\u7ed9\u51fa\u76f8\u5e94\u7684\u8f93\u51fa\u3002\u4f8b\u5982\uff1a</p> <p><code>YES 4</code></p> <p>```c</p>"},{"location":"Csave/#include","title":"include","text":""},{"location":"Csave/#include_1","title":"include <p>int check(double p[],int n) {     int ret = 0;     int cnt = 0;     for(int i = 0;i &lt; n;i++)     {         if(p[i] &lt; 1e-6){cnt++;}     }     if(cnt == n){ret = 1;}     return ret; } double euclid(double a[],int n)  //get Euclid {     double product = 0;     for(int i = 0;i&lt;n;i++)      {         product += a[i] * a[i];     }     double ret = sqrt(product);     return ret; } double inner_product(double q[],double a[],int n) {     double ret = 0;     for(int i = 0;i&lt;n;i++)     {         ret += a[i] * q[i];     }     return ret; } int main() {     int n,m;     scanf(\"%d %d\",&amp;n,&amp;m);     double a[n],q[m][n];     for(int i = 0;i &lt; n;i++)     {         scanf(\"%lf\",&amp;a[i]);     }     double d = euclid(a,n);     if(d &lt; 1e-6)     {         printf(\"YES 1\");         goto end;     }     for(int i = 0;i &lt; n;i++)     {         q[0][i] = a[i]/d;     }     for(int j = 1; j &lt; m;j++)     {         for(int i = 0;i &lt; n;i++)         {             scanf(\"%lf\",&amp;a[i]);         }         for(int i = 0;i &lt; n;i++)         {             q[j][i] = a[i];         }         for(int k = 0;k &lt; j;k++) //\u6b63\u4ea4\u5316         {             double tem = inner_product(q[k],a,n);             for(int i = 0;i &lt; n;i++)             {                 q[j][i] -= tem * q[k][i];             }         }         if(check(q[j],n))         {             printf(\"YES %d\",j+1); end:             break;         }         double d = euclid(q[j],n);         for(int i = 0;i &lt; n;i++)  //q[i]\u89c4\u8303\u5316         {             q[j][i] = q[j][i]/d;         }          if(j == m - 1)         {             printf(\"NO\\n\");             printf(\"%.2f\",q[j][0]);             for(int i = 1;i&lt;n;i++)             {                 printf(\" %.2f\",q[j][i]);             }         }     } } ```</p>","text":""},{"location":"Function/","title":"varible function","text":"<ul> <li>fabs(double x)\u6c42\u6d6e\u70b9\u6570\u7edd\u5bf9\u503c</li> <li>math.h<ul> <li>\u5e42\u8fd0\u7b97: <code>int mask = pow(10,cnt-1);</code></li> <li>\u6839\u53f7:<code>sqrt(n)</code></li> </ul> </li> <li> <p>string.h</p> <p>\u63d0\u9192: \u4e0b\u8fb9\u7684\u524d4\u4e2a\u51fd\u6570\u6700\u540e\u7684n\u4e0d\u662f\u5fc5\u9700\u7684</p> <ul> <li>strlen(const char *s);\u8fd4\u56des\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff08\u4e0d\u5305\u542b\u7ed3\u5c3e\u76840\uff09</li> <li>strcmp(const char s1,const char s2,n);\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\uff1a<ul> <li>0: s1==s2</li> <li>1: s1&gt;s2</li> <li>-1: s1&lt;s2</li> </ul> </li> <li> <p>strcpy(char restrict dst,const char restrict src,n); \u628asrc\u7684\u5b57\u7b26\u4e32copy\u5230dst</p> <ul> <li>restrict \u8868\u793asrc\u548cdst\u4e0d\u91cd\u53e0</li> <li>\u8fd4\u56dedst</li> <li>\u590d\u5236\u4e00\u4e2a\u5b57\u7b26\u4e32</li> </ul> <p><code>c char *dst = (char*)malloc(strlen(src)+1); strcpy(dst,src);</code></p> </li> <li> <p>strcat(char restrict s1,const char restrict s2,n); \u628as2\u62f7\u8d1d\u5230s1\u540e\u9762\u3002</p> <ul> <li>\u8fd4\u56des1</li> <li>s1\u5fc5\u987b\u6709\u8db3\u591f\u7a7a\u95f4</li> </ul> </li> <li> <p>char * strchr(const char s,int c);  \u4ece\u5de6\u8fb9search char * strrchr(const char s,int c); \u4ece\u53f3\u8fb9search</p> <ul> <li>\u8fd4\u56deNULL\u8868\u793a\u6ca1\u6709\u627e\u5230</li> <li> <p>\u5bfb\u627e\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684\u64cd\u4f5c:</p> <p>```c</p> <p>char s[] = \"Hello\"; char *p = strchr(s,'l'); p = strchr(p+1,'l'); ```</p> </li> <li> <p>\u590d\u5236\u67d0\u4e2a\u5b57\u7b26\u524d\u7684\u5185\u5bb9</p> <p>```c char s[] = \"Hello\"; char p = strchr(s,'l'); char c = p; p = '\\0'; char t = (char)malloc(strlen(s)+1); strcpy(t,s); printf(\"%s\",t); free(t); p = c;</p> <p>```</p> </li> </ul> </li> <li> <p>char * strstr(const char s1,const char s2); \u5b57\u7b26\u4e32\u4e2d\u5bfb\u627e\u5b57\u7b26\u4e32 char * strcasestr(const char *s1,const char * s2);\u5ffd\u7565\u5927\u5c0f\u5199</p> </li> </ul> </li> <li> <p>stdlib.h</p> <ul> <li> <p>qsort(\u6392\u5e8f)</p> <ul> <li>1.\u6570\u7ec4\u540d\uff0c\u5143\u7d20\u4e2a\u6570\uff0c\u6570\u7ec4\u5143\u7d20\u6240\u5360\u5b57\u8282\uff08int\uff0cdouble\uff09\uff0c\u6392\u5e8f\u539f\u5219\uff08\u9012\u589e\uff0c\u9012\u51cf\uff0c\u5947\u5076\u4ea4\u53c9\uff09</li> </ul> <p>```c</p>"},{"location":"Function/#include","title":"include <p>int cmp(const void a,const void b) {     return (int)a - (int)b; } //\u6b64\u65f6\u8868\u793a\u9012\u589e\uff0c\u82e5\u60f3\u9012\u51cf\u53ea\u9700\u5c06a\uff0cb\u6362\u4f4d</p> <p>qsort(num,n,sizeof(int),cmp) ```</p> <p>```c //\u6d6e\u70b9\u6570\uff08double\uff09 </p> <p>//\u9700\u8981\u6ce8\u610f\u6d6e\u70b9\u6570\u4f1a\u5b58\u5728\u7cbe\u5ea6\u635f\u5931\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u901a\u8fc7\u6bd4\u8f83\uff0c\u6765\u8fd4\u56de1\u6216-1\uff0c\u4ee5\u786e\u5b9a\u662f\u589e\u5e8f\u8fd8\u662f\u964d\u5e8f\u3002 int cmp(const void a,const void b) {     return (double)a&gt;(double)b?1:-1; } ```</p> <p><code>c //\u5b57\u7b26 int cmp(const void *a,const void *b) {     return *(char*)a-*(char*)b; }</code></p> <p><code>c //\u7ed3\u6784\u4f53 struct node{     int i;     double j;     char k; }; int cmp(const void *a,const void *b) {     return (*(node*)a).i-(*(node*)b).i; }</code></p>  <li> <p>malloc\uff08\u52a8\u6001\u5185\u5b58\uff09free()</p> <ul> <li>\u8fd4\u56de\u7684\u7ed3\u679c\u662fvoid* ,\u9700\u8981\u7c7b\u578b\u8f6c\u6362\u4e3a\u6240\u9700\u7684</li> <li>(int)malloc(nsizeof(int))</li> <li>\u6700\u540e\u9700\u8981</li> <li>\u7533\u8bf7\u5931\u8d25\u5219\u8fd4\u56de0\uff0c\u6216\u8005\u53eb\u505aNULL</li> <li>free()\u5c06\u7533\u8bf7\u7684\u6765\u7684\u7a7a\u95f4\u8fd8\u7ed9\u7cfb\u7edf</li> </ul> <p><code>c void *p; int i; p = malloc(3); free(p); //right p = &amp;i; free(p); //wrong</code></p> </li>   <li> <p><code>atoi(const char *str)</code> \u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6574\u6570\u578b\uff0c\u5b57\u7b26\u4e32\u4e2d\u5fc5\u987b\u8981\u6709\u7ec8\u6b62\u7b26</p> </li>","text":""}]}